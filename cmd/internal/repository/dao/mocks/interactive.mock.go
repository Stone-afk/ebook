// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/stone/go_project/ebook/ebook/cmd/internal/repository/dao/interactive/types.go

// Package daomocks is a generated GoMock package.
package daomocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockInteractiveDAO is a mock of InteractiveDAO interface.
type MockInteractiveDAO struct {
	ctrl     *gomock.Controller
	recorder *MockInteractiveDAOMockRecorder
}

// MockInteractiveDAOMockRecorder is the mock recorder for MockInteractiveDAO.
type MockInteractiveDAOMockRecorder struct {
	mock *MockInteractiveDAO
}

// NewMockInteractiveDAO creates a new mock instance.
func NewMockInteractiveDAO(ctrl *gomock.Controller) *MockInteractiveDAO {
	mock := &MockInteractiveDAO{ctrl: ctrl}
	mock.recorder = &MockInteractiveDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInteractiveDAO) EXPECT() *MockInteractiveDAOMockRecorder {
	return m.recorder
}

// DeleteLikeInfo mocks base method.
func (m *MockInteractiveDAO) DeleteLikeInfo(ctx context.Context, biz string, bizId, uid int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLikeInfo", ctx, biz, bizId, uid)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLikeInfo indicates an expected call of DeleteLikeInfo.
func (mr *MockInteractiveDAOMockRecorder) DeleteLikeInfo(ctx, biz, bizId, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLikeInfo", reflect.TypeOf((*MockInteractiveDAO)(nil).DeleteLikeInfo), ctx, biz, bizId, uid)
}

// IncrReadCnt mocks base method.
func (m *MockInteractiveDAO) IncrReadCnt(ctx context.Context, biz string, bizId int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrReadCnt", ctx, biz, bizId)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrReadCnt indicates an expected call of IncrReadCnt.
func (mr *MockInteractiveDAOMockRecorder) IncrReadCnt(ctx, biz, bizId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrReadCnt", reflect.TypeOf((*MockInteractiveDAO)(nil).IncrReadCnt), ctx, biz, bizId)
}

// InsertLikeInfo mocks base method.
func (m *MockInteractiveDAO) InsertLikeInfo(ctx context.Context, biz string, bizId, uid int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertLikeInfo", ctx, biz, bizId, uid)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertLikeInfo indicates an expected call of InsertLikeInfo.
func (mr *MockInteractiveDAOMockRecorder) InsertLikeInfo(ctx, biz, bizId, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertLikeInfo", reflect.TypeOf((*MockInteractiveDAO)(nil).InsertLikeInfo), ctx, biz, bizId, uid)
}
