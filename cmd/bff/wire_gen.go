// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"ebook/cmd/bff/handler"
	"ebook/cmd/bff/handler/jwt"
	"ebook/cmd/bff/ioc"
	"ebook/cmd/pkg/appx"
)

// Injectors from wire.go:

//go:generate wire
func InitApp() *appx.App {
	cmdable := ioc.InitRedis()
	jwtHandler := jwt.NewRedisJWTHandler(cmdable)
	logger := ioc.InitLogger()
	v := ioc.InitMiddlewares(cmdable, jwtHandler, logger)
	client := ioc.InitEtcdClient()
	userServiceClient := ioc.InitUserClient(client)
	codeServiceClient := ioc.InitCodeClient(client)
	userHandler := handler.NewUserHandler(userServiceClient, codeServiceClient, jwtHandler)
	oauth2ServiceClient := ioc.InitOauth2ServiceClient(client)
	wechatHandlerConfig := ioc.NewWechatHandlerConfig()
	oAuth2WechatHandler := handler.NewOAuth2WechatHandler(oauth2ServiceClient, userServiceClient, jwtHandler, wechatHandlerConfig)
	articleServiceClient := ioc.InitArticleClient(client)
	interactiveServiceClient := ioc.InitInterActiveClient(client)
	rewardServiceClient := ioc.InitRewardClient(client)
	articleHandler := handler.NewArticleHandler(articleServiceClient, interactiveServiceClient, rewardServiceClient, logger)
	rewardHandler := handler.NewRewardHandler(rewardServiceClient)
	observabilityHandler := handler.NewObservabilityHandler()
	server := ioc.InitGinServer(v, userHandler, oAuth2WechatHandler, articleHandler, rewardHandler, observabilityHandler)
	app := &appx.App{
		WebServer: server,
	}
	return app
}
