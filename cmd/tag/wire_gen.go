// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"ebook/cmd/pkg/appx"
	"ebook/cmd/tag/grpc"
	"ebook/cmd/tag/ioc"
	"ebook/cmd/tag/repository/cache"
	"ebook/cmd/tag/repository/dao"
	"ebook/cmd/tag/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

//go:generate wire
func Init() *appx.App {
	logger := ioc.InitLogger()
	db := ioc.InitDB(logger)
	tagDAO := dao.NewGORMTagDAO(db)
	cmdable := ioc.InitRedis()
	tagCache := cache.NewRedisTagCache(cmdable)
	tagRepository := ioc.InitRepository(tagDAO, tagCache, logger)
	client := ioc.InitKafka()
	producer := ioc.InitProducer(client)
	tagService := service.NewTagService(tagRepository, producer, logger)
	tagServiceServer := grpc.NewTagServiceServer(tagService)
	clientv3Client := ioc.InitEtcdClient()
	server := ioc.InitGRPCxServer(tagServiceServer, clientv3Client, logger)
	app := &appx.App{
		GRPCServer: server,
	}
	return app
}

// wire.go:

var thirdProvider = wire.NewSet(ioc.InitRedis, ioc.InitLogger, ioc.InitDB, ioc.InitKafka, ioc.InitProducer, ioc.InitEtcdClient)
