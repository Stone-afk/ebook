
syntax="proto3";

import "search/v1/sync.proto";

package search.v1;
option go_package="search/v1;searchv1";

service SearchService {
  // 这个是最为模糊的搜索接口
  rpc Search(SearchRequest) returns (SearchResponse);

  // 你可以考虑提供业务专属接口
  // 实践中，这部分你应该确保做到一个实习生在进来三个月之后，
  // 就可以快速开发这种特定业务的搜索接口
  //  rpc SearchUser() returns()
}

// 业务专属接口
service UserSearchService {
  rpc SearchUser(UserSearchRequest) returns (UserSearchResponse);

}

service ArticleSearchService {
  rpc SearchArticle(ArticleSearchRequest) returns (ArticleSearchResponse);

}

service TagSearchService {
  rpc SearchBizTags(BizTagsSearchRequest) returns (BizTagsSearchResponse);
}

message UserSearchRequest {
  string expression = 1;
}

message UserSearchResponse {
  UserResult user = 1;
}

message ArticleSearchRequest {
  string expression = 1;
  int64 uid = 2;
}

message ArticleSearchResponse {
  ArticleResult article = 1;
}

message BizTagsSearchRequest {
  string expression = 1;
  int64 uid = 2;
  string biz = 3;
}

message BizTagsSearchResponse {
  BizTagsResult BizTags = 1;
}

message SearchRequest {
  string expression = 1;
  int64 uid = 2;
}

message SearchResponse {
  UserResult user = 1;
  ArticleResult article = 2;
  BizTagsResult BizTags = 3;
}

message UserResult {
  repeated User users =1;
}

message ArticleResult {
  repeated Article articles = 1;
}

message BizTagsResult {
  repeated BizTags mutibiztags = 1;
}