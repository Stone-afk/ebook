// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"ebook/cmd/code/grpc"
	"ebook/cmd/code/ioc"
	"ebook/cmd/code/repository"
	"ebook/cmd/code/repository/cache"
	"ebook/cmd/code/service"
	"ebook/cmd/pkg/appx"
	"github.com/google/wire"
)

// Injectors from wire.go:

//go:generate wire
func Init() *appx.App {
	logger := ioc.InitLogger()
	client := ioc.InitEtcdClient()
	cmdable := ioc.InitRedis()
	codeCache := cache.NewCodeCache(cmdable)
	codeRepository := repository.NewCodeRepository(codeCache)
	smsServiceClient := ioc.InitSmsRpcClient(client)
	codeService := service.NewCodeService(codeRepository, smsServiceClient)
	codeServiceServer := grpc.NewCodeServiceServer(codeService)
	server := ioc.InitGRPCServer(logger, client, codeServiceServer)
	app := &appx.App{
		GRPCServer: server,
	}
	return app
}

// wire.go:

var thirdProvider = wire.NewSet(ioc.InitRedis, ioc.InitEtcdClient, ioc.InitLogger)
